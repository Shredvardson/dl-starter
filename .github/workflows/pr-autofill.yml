name: PR Autofill
on:
  pull_request_target:
    types: [opened, edited, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  ensure-body:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base (trusted) ref
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          fetch-depth: 1

      - name: Load template
        id: tpl
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const fs = require('fs');
            return fs.readFileSync('.github/pull_request_template.md', 'utf8');

      - name: Patch PR body if missing/placeholder
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body || "";
            const looksEmpty = body.trim().length < 50;

            // Optional: ignore commented placeholders and be a bit more flexible
            const cleaned = body.replace(/<!--[\s\S]*?-->/g, '');
            const isPlaceholder = /(##\s*Summary\b)|Summary:\s*_?What changed/i.test(cleaned);

            const tpl = process.env.TEMPLATE;
            if (!tpl || tpl.length < 10) core.setFailed("Template is empty or missing.");

            if (looksEmpty || isPlaceholder) {
              await github.rest.pulls.update({
                ...context.repo,
                pull_number: context.payload.pull_request.number,
                body: tpl
              });
              core.notice("PR body was empty/placeholder â†’ filled from template.");
            } else {
              core.info("PR body looks good. No change.");
            }
        env:
          TEMPLATE: ${{ steps.tpl.outputs.result }}
