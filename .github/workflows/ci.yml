name: CI
on:
  push:
    branches: [ "**" ]          # run on any branch push
  pull_request:
    branches: [ "**" ]          # run on any PR
  workflow_dispatch:
    inputs:
      matrix_enabled:
        description: 'Enable Node.js matrix testing (18, 20)'
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ github.event.inputs.matrix_enabled == 'true' && fromJSON('[18, 20]') || fromJSON('[20]') }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Print versions & pnpm config
        run: |
          pnpm -v
          node -v
          pnpm config get ignore-scripts || true

      - name: Preflight (placeholders & env.example)
        run: |
          if grep -R "{{PLACEHOLDER}}" . -n --exclude-dir=node_modules --exclude=.turbo | grep -q .; then
            echo "Unreplaced {{PLACEHOLDER}} found"; exit 1; fi
          [ -f .env.example ] || (echo "Missing .env.example" && exit 1)

      - name: Install
        run: pnpm -w install --frozen-lockfile

      - name: Lint (no warnings allowed)
        run: pnpm turbo run lint && pnpm -w exec eslint . --max-warnings=0

      - name: Typecheck
        run: pnpm turbo run typecheck

      - name: Build
        run: pnpm turbo run build --filter=web

      - name: Install Playwright browsers
        run: pnpm dlx playwright install --with-deps

      - name: Unit tests
        run: pnpm turbo run test:unit

      - name: E2E tests
        run: pnpm test:e2e

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: web-next-build-${{ matrix.node-version }}
          path: apps/web/.next
          retention-days: 3

  doctor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - run: pnpm -w install --frozen-lockfile
      - name: Run Starter Doctor
        run: npx tsx scripts/starter-doctor.ts

  constitution-guard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install
        run: pnpm i --frozen-lockfile

      - name: Constitution Checksum Guard
        run: |
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files: $CHANGED_FILES"

          # Check if any binding source files changed
          BINDING_SOURCES_CHANGED=false

          # Key binding sources to watch
          BINDING_FILES="CLAUDE.md docs/llm/context-map.json docs/llm/STARTER_MANIFEST.json docs/llm/NEW_APP_KICKOFF.md docs/llm/CONTRIBUTING_LLMS.md docs/llm/QUALITY_PIPELINE.md packages/config/eslint.config.mjs packages/config/prettier.config.js apps/web/src/styles/tokens.css apps/web/app.config.ts"

          for file in $BINDING_FILES; do
            if echo "$CHANGED_FILES" | grep -q "$file"; then
              echo "Binding source changed: $file"
              BINDING_SOURCES_CHANGED=true
              break
            fi
          done

          if [ "$BINDING_SOURCES_CHANGED" = true ]; then
            if ! echo "$CHANGED_FILES" | grep -q "docs/llm/CONSTITUTION.CHECKSUM"; then
              echo "‚ùå Binding sources changed but CONSTITUTION.CHECKSUM not updated"
              echo "üí° Run: pnpm tsx scripts/update-constitution-checksum.ts"
              exit 1
            else
              echo "‚úÖ Constitution checksum updated with binding source changes"
            fi
          else
            echo "‚úÖ No binding source changes detected"
          fi
